#
# A fatal error has been detected by the Java Runtime Environment:
#
#  SIGSEGV (0xb) at pc=0x000000013bcb8c74, pid=90425, tid=259
#
# JRE version: Java(TM) SE Runtime Environment 18.9 (11.0.25+9) (build 11.0.25+9-LTS-256)
# Java VM: Java HotSpot(TM) 64-Bit Server VM 18.9 (11.0.25+9-LTS-256, mixed mode, tiered, compressed oops, g1 gc, bsd-aarch64)
# Problematic frame:
# C  [libtorch_python.dylib+0x4b8c74]  std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, void*>*> std::__1::__hash_table<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const+0x8c
#
# No core dump will be written. Core dumps have been disabled. To enable core dumping, try "ulimit -c unlimited" before starting Java again
#
# If you would like to submit a bug report, please visit:
#   https://bugreport.java.com/bugreport/crash.jsp
# The crash happened outside the Java Virtual Machine in native code.
# See problematic frame for where to report the bug.
#

---------------  S U M M A R Y ------------

Command Line: -Dfile.encoding=UTF8 -ea -Xmx1024m 

Host: Mac16,8 arm64 1 MHz, 14 cores, 24G, Darwin 24.6.0
Time: Sun Aug 31 09:29:21 2025 KST elapsed time: 5.963236 seconds (0d 0h 0m 5s)

---------------  T H R E A D  ---------------

Current thread (0x000000010583d000):  JavaThread "main" [_thread_in_native, id=259, stack(0x000000016c5a8000,0x000000016d5a8000)]

Stack: [0x000000016c5a8000,0x000000016d5a8000],  sp=0x000000016d59cd30,  free space=16339k
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
C  [libtorch_python.dylib+0x4b8c74]  std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, void*>*> std::__1::__hash_table<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const+0x8c
C  [libtorch_python.dylib+0x4ae424]  LogAPIUsageOnceFromPython(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)+0x30
C  [libtorch_python.dylib+0x4ba980]  void pybind11::cpp_function::initialize<void (*&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&), void, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, pybind11::name, pybind11::scope, pybind11::sibling>(void (*&)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&), void (*)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&), pybind11::name const&, pybind11::scope const&, pybind11::sibling const&)::'lambda'(pybind11::detail::function_call&)::__invoke(pybind11::detail::function_call&)+0x54
C  [libtorch_python.dylib+0x10e5c]  pybind11::cpp_function::dispatcher(_object*, _object*, _object*)+0x1024
